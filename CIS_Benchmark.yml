Install kube-bench
https://github.com/aquasecurity/kube-bench/blob/main/docs/installation.md
 curl -L https://github.com/aquasecurity/kube-bench/releases/download/v0.6.8/kube-bench_0.6.8_linux_amd64.deb  -o kube-bench_0.6.8_linux_amd64.deb
 sudo apt install ./kube-bench_0.6.8_linux_amd64.deb -f

Managing Network Interfaces on a Linux Host
Introduction
Your company, SecuriCorp, is using Kubernetes to run a variety of applications. Recently, hackers have been trying various techniques to break into the Kubernetes cluster and steal data.

You have been asked to strengthen the security of the cluster. Run a CIS Kubernetes Benchmark evaluation using kube-bench and address some of the cluster security issues.

Solution
Log in to the control plane node server using the credentials provided:

ssh cloud_user@<PUBLIC_IP_ADDRESS>
Run kube-bench and Obtain a CIS Benchmark Report
Download the kube-bench Job manifest files:

wget -O kube-bench-control-plane.yaml https://raw.githubusercontent.com/aquasecurity/kube-bench/main/job-master.yaml

wget -O kube-bench-node.yaml https://raw.githubusercontent.com/aquasecurity/kube-bench/main/job-node.yaml
Create the Jobs to run the benchmark files:

kubectl create -f kube-bench-control-plane.yaml
kubectl create -f kube-bench-node.yaml
Check the status of the Jobs:

kubectl get pods
Save the benchmark results on the Job's Pod logs, replacing the Pod name placeholder values with the actual Pod names:

kubectl logs <CONTROL_PLANE_JOB_POD_NAME> > /home/cloud_user/kube-bench-control.log
kubectl logs <NODE_JOB_POD_NAME> > /home/cloud_user/kube-bench-worker.log
Turn Off Profiling for the API Server, Controller Manager, and Scheduler
View the kube-bench test results for the control plane:

cat /home/cloud_user/kube-bench-control.log
Scroll down to the failed test 1.2.20 and read the summary.

Scroll down to the Remediations master near the bottom and read under 1.2.20 for additional information on fixing the issue.
Scroll to 1.3.2 and 1.4.1 and read the information on fixing these issues.
Edit the Kubernetes API server manifest file using the provided lab password:

sudo vi /etc/kubernetes/manifests/kube-apiserver.yaml
Under containers:, add the following command beneath kube-apiserver to turn off profiling:

spec:
  containers:
  - command:
    - kube-apiserver
    - --profiling=false

    ...
To save and exit the file, press Escape and enter :wq.

Repeat the process above to turn off profiling for the Kubernetes controller manager:

spec:
  containers:
  - command:
    - kube-controller-manager
    - --profiling=false

    ...
Repeat the process again to turn off profiling for the Kubernetes scheduler:

spec:
  containers:
  - command:
    - kube-scheduler
    - --profiling=false

    ...
Check the Pods:

kubectl get pods -n kube-system
Set kubelet authn/authz to Use Webhook Mode
View the kube-bench test results for the worker node:

cat /home/cloud_user/kube-bench-worker.log
Scroll down to the failed test 4.2.2 and read the summary.

Scroll down to the Remediations node near the bottom and read under 4.2.2 for additional information on fixing the issue.

Log in to the worker node server using the provided lab credentials:

ssh cloud_user@<PUBLIC_IP_ADDRESS>
Edit the kubelet configuration file using the provided lab password:
udo vi /var/lib/kubelet/config.yaml
s
Set authorization.mode to Webhook:

authorization:
  mode: Webhook
Press Escape and enter :wq.

Restart kubelet:

sudo systemctl restart kubelet
To verify the issues were fixed, return to the control plane server and delete the existing Jobs:

kubectl delete job kube-bench-master
kubectl delete job kube-bench-node
Re-run the Jobs:

kubectl create -f kube-bench-control-plane.yaml
kubectl create -f kube-bench-node.yaml
Check the Pods:

kubectl get pods
Once the STATUS shows Completed, view the Pod logs, replacing the Pod name placeholder values with the actual Pod names:

kubectl logs <CONTROL_PLANE_JOB_POD_NAME>
kubectl logs <NODE_JOB_POD_NAME>
Check the results of the kube-bench tests. For the tests addressed, the results should now show [PASS]!





