openssl req -nodes -new  -x509 -keyout  accounts.key -out accounts.crt  -subj "/CN=accounts.svc" -days 10000

openssl req -x509 -new -nodes -key ca.key -subj "/CN=${MASTER_IP}" -days 10000 -out ca.crt

Generamos secreto



apiVersion: v1
kind: Secret
metadata:
  name: secret-tls
  namespace: accounts
type: kubernetes.io/tls
data:
  # the data is abbreviated in this example
  tls.crt: |
        LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lVUXJXRnlIck9B
        S0Fuc25UQ2pVZDE0aW9VSXEwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0Z6RVZNQk1HQTFVRUF3d01Z
        V05qYjNWdWRITXVjM1pqTUI0WERUSXlNRFV6TVRBM01ETTBObG9YRFRRNQpNVEF4TmpBM01ETTBO
        bG93RnpFVk1CTUdBMVVFQXd3TVlXTmpiM1Z1ZEhNdWMzWmpNSUlCSWpBTkJna3Foa2lHCjl3MEJB
        UUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFzRzNOYVVUdFAwVUtrbWE0dE8xRU5NY1RPem0vUEUzUjBW
        WW0KcU82UVVoSlVNYjVhVWc5Qld3N2w2aFZWRXovdXJESEszRFZLRjdOYkY0TnR3WndidEVJQTVX
        Tzd2Ym9MVm9QSApPN1U3YWI2NnFpZlBidjVTS0tSNXVtWmJlVWdYUGtzL2Z1ZmhZazhpQ0Y2VEkx
        cmFjL2hIQVpqTTk2WGdFeTEyCkI4WkZOOEFXNEd1NDZIWUJweFhLYXY2UndTcmlMNmN2WmEzL2pj
        VGk5V0tiTTZ0dFN4RWhnTnQ0OW5QU3RFVnIKdE8wdXV6d0FrYnF5eHRBU0pjT0pMdnAzSFJ4UytD
        bWVtTXVRYjVJdlVoYStleERaWEpmWmdZSWN0dGg1bGs1SApka0pobDFNTlhGeWt3V014QlhMa3BE
        Yjg1a0pEQnBUYWxpZUhpTHN0UC8wcHNtN0FHd0lEQVFBQm8xTXdVVEFkCkJnTlZIUTRFRmdRVUVZ
        M1NNalQ5bG9EbWNtYzdMOGN1YkRLeUx1UXdId1lEVlIwakJCZ3dGb0FVRVkzU01qVDkKbG9EbWNt
        YzdMOGN1YkRLeUx1UXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txaGtpRzl3MEJBUXNGQUFP
        QwpBUUVBTXRQUkRHdkNsSjE5cngxWUN2UHk1azVSYUxtOXNNU2kzdHdmdzBrU28xcDBLL2ovUmhO
        aTdlRFlvcFlGCjJGM0dITFhJWTF3N014SnR1QkJoRFlMN0dSdnpXUFNaWG4veXppZ0tuRUJYRDdU
        bWxEL0ZlYjdwZHJwRjlzZjEKS0g5WXdReFVaTzBpbHA4bisyWWl2amdqQldoRGI3eHdDOW5Tc0JY
        UmV5VkZuS3ZQYmhiMENuVEdEc2JrWnE0WgpReTQ0cWpQMjh5NzFxdnJHalJkL1NPbElKY2Npb1hp
        eUo2OWdYMG0zNXM4NXdBZjBPZnliTk9SQXN2cytJVWhPClFVYWNuS3JXZDJuOE9pSGhldG9FVjJw
        QlZIRU9UZHpuUFFHQWlkNWRQYmxBc1NzTkIwY25qNXB3OURuclkrUDQKam5vQjhraTBlMnAzS2Jq
        dnNoTXZzNnpsQ1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: |
        LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZB
        QVNDQktrd2dnU2xBZ0VBQW9JQkFRQ3diYzFwUk8wL1JRcVMKWnJpMDdVUTB4eE03T2I4OFRkSFJW
        aWFvN3BCU0VsUXh2bHBTRDBGYkR1WHFGVlVUUCs2c01jcmNOVW9YczFzWApnMjNCbkJ1MFFnRGxZ
        N3U5dWd0V2c4Yzd0VHRwdnJxcUo4OXUvbElvcEhtNlpsdDVTQmMrU3o5KzUrRmlUeUlJClhwTWpX
        dHB6K0VjQm1NejNwZUFUTFhZSHhrVTN3QmJnYTdqb2RnR25GY3BxL3BIQkt1SXZweTlscmYrTnhP
        TDEKWXBzenEyMUxFU0dBMjNqMmM5SzBSV3UwN1M2N1BBQ1J1ckxHMEJJbHc0a3UrbmNkSEZMNEta
        Nll5NUJ2a2k5UwpGcjU3RU5sY2w5bUJnaHkyMkhtV1RrZDJRbUdYVXcxY1hLVEJZekVGY3VTa052
        em1Ra01HbE5xV0o0ZUl1eTAvCi9TbXlic0FiQWdNQkFBRUNnZ0VBVHhJbkNaTDJzWENEK0hGSlB1
        MUhzRSs0Y3NiQ3lvZ21EU2dMVTVMMzQ1Q0wKWTIvb2t2WjdXQkFwUXV3a29PZjZVL3BNN0x5RlpI
        SGgxWHYxNk52S0h0T21DeWpUcjRoK0pGd1RJdE5xdVUzZAo0dnpNbnZZa1pFcXlzN1BFTTJyMzM5
        ZGhzY0xDNUlpS3ZDMkd6RVdmdW5IL2dOdTJvUmNhZ2YzUjlGSU1HNXVnCjZtZkZDekVxRmNmbWE0
        ck5OeW4zN3dtNmwvTkhwODNaSzhIL29qOE52MmN1RHJGUVBGVHNNR1ArcXdQK3ZVbWYKTUNHVm5t
        Zm5tUDJ0N0lIRVBTSFpJcTNzSXpRZ3lzOGNoMlYxYllpeWN0Ni9UZmd5MzNYLy80MEtEcm1qaFBC
        Swo0ZWpQZjQ0VTRXakRYWmMzTUxhU2NtVmNuUmw2M09NRlNVUmJibjg1WVFLQmdRRGZSdnp1WlA5
        NWFZV1ZYS0M2ClNESWdqdHJ6amh1ZmNNWkgxcnNoeFA2MTNFYkdMYTczY25vRHJFbG52bDFmWWMy
        UUt6MHhSalV4V1BXb3pwZDgKUmlHdnc5SklTVEtuNXNhN1VBM21oWkdEbFcwZUM2b3RtVWVTYjRw
        b2o1Yks2Vm9VcjVVaXhkNXovbEFid0JSUQpjanhjcEZqbDMzZ3VYKzFMdXZlWCt2Nk9mUUtCZ1FE
        S1NTTVN1V0NGdlZIRC8vVWJNY25OdDRPWmdUTVFKU3lkCjVSRktEUnFzeHpIOSt0NzZ5ai95NU5j
        K09tSFlWVFcyYk5RZ0lUVElDaFVjZnhHalBRRllxWmdXbXkyaWJ4RUwKdGVCS1kzalp4Z3AzQkly
        cC9sc2RKQkpWWnlUQTEyMHIrV2xDcXZpTXlCKzF4QUVHSHkrSXFjWm44eDZQMzdiMAorSUpOckhm
        VWR3S0JnUUNOcDdFUzRuci9JWWFCMDRtWmhmSmZtNktvQVJIZlh5STlNNnYzNmM2YnZNd2VNWitm
        CkdENzNFNWhpdkhEcThkY0VUNXA4SjRuWjdCRzNicExIWW9zK3d5TW5mMkVuQ3hBc2lNYTQ2U2Iv
        NzQ2U0VGNkEKblkyK0J3d3QrR040Q3dKK3UwTUlFN2RscWdSVEJ0TWNrczFmRFZubFJaa3UrdWRI
        TTdDZitMc0YxUUtCZ1FDTgpBZmFFOHR3cDNoTEZRZ01sOWNycXIrWDRkMnVVOFpUc2ErVmxiVVVP
        ODd3UmczTXo5eEFrelFpTnhEeTRoSTF3Cm9PUXRrWGd0aVhtMTU0M3Y4SEtqejNUSkxWcmVRL1hw
        NTlwMWdHbVp4TWMrdDlmdHpQVE9sM3FBTmVvVTB4YXkKOUtVL1o5YmlyQTRPc3BiVUlhRU03dXZ6
        UWpJbnNKYmtwT2FRSm8xUmVRS0JnUURFMUdGUHcwYWJScTI4REZZWQp4TitHK0RCQlNKRUE2djZh
        aEpvZVo4aDZRZ0dzK0p0cmUrdnF2d0ZGaHVsRE1QZlYrUHlXc1hmTkwrODVqd010CjJzWll2ZUxs
        amNvZm00UWZuSkNKS3dmWDcwdjBTNUZYekZGNUlRNThwSmZzYWFaYWR1UzZ1M0dVNGRKK2VveWoK
        aFkzUFd1ZjIwMFhaaGFjT3dvaGxpRzY4Ync9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  

Creamos el ingress tls

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: accounts-tls
  namespace: accounts
spec:
  tls:
  - hosts:
      - accounts.svc
    secretName: secret-tls
  rules:
  - host: accounts.svc
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: accounts-svc
            port:
              number: 80